# docker-compose.yaml - base config
#version: '3.8'

services:
  api:
    container_name: ${APP_NAME}_api
    image: ${APP_NAME}_api:${APP_API_VERSION}
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        APP_ENVIRONMENT: ${APP_ENVIRONMENT}
    environment:
      APP_ENVIRONMENT: ${APP_ENVIRONMENT}
    networks:
      - app_network
    volumes:
      # Анонимный том для кэша Poetry, чтобы он не конфликтовал с локальным монтированием
      # не уверен, что это нужно
      - api_poetry_cache:/opt/poetry/cache
    entrypoint: ["poetry", "run", "uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8000"]    
#    depends_on:
#      -db
#      - db_dev
#      - db_prod
  web_vue3:
    container_name: ${APP_NAME}_web_vue3
    image: ${APP_NAME}_web_vue3:${APP_API_VERSION}
    build:
      context: ./web/vue3
      dockerfile: Dockerfile.${APP_ENVIRONMENT}
    environment:
      APP_ENVIRONMENT: ${APP_ENVIRONMENT}
    networks:
      - app_network
  nginx:
    container_name: ${APP_NAME}_nginx
    image: ${APP_NAME}_nginx:${APP_API_VERSION}
    build:
      context: ./nginx
      dockerfile: Dockerfile
    environment:
      APP_ENVIRONMENT: ${APP_ENVIRONMENT}
      #NGINX_PORT: 80 # 80|443 перенес в .dev .prod настройки
      #NGINX_SERVER_NAME: "localhost" # "localhost" | "${APP_BASE_URL}" перенес в .dev .prod настройки
      #API_SERVER_NAME: ##"${API_URL_PREFIX}.localhost" | "${APP_BASE_URL}"
      API_HOST: "api" # Имя другого сервиса в docker-compose
      API_PORT: 8000
    networks:
      - app_network
    
    

networks:
  app_network:
    driver: bridge

# Definition of named volumes
volumes:
  api_poetry_cache:
# docker-compose.yaml - base config
#version: '3.8'

services:
  api:
    container_name: ${APP_NAME}_api
    image: ${APP_NAME}_api:${APP_API_VERSION}
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        APP_ENVIRONMENT: ${APP_ENVIRONMENT}
    environment:
      APP_ENVIRONMENT: ${APP_ENVIRONMENT}
      DOCKER_CONTAINER_MODE: True
      APP_NAME: ${APP_NAME}
      APP_VERSION: ${APP_VERSION}
      APP_API_VERSION: ${APP_API_VERSION}
      APP_WEB_VERSION: ${APP_WEB_VERSION}
      NGINX_WEB_SERVER_NAME: ${NGINX_WEB_SERVER_NAME}
      NGINX_API_SERVER_NAME: ${NGINX_API_SERVER_NAME}
      NGINX_WEB_HTTP_PROTOCOL: ${NGINX_WEB_HTTP_PROTOCOL}
      NGINX_API_HTTP_PROTOCOL: ${NGINX_API_HTTP_PROTOCOL}
      NGINX_WEB_PORT: ${NGINX_WEB_PORT}
      NGINX_API_PORT: ${NGINX_API_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    networks:
      - app_network
    volumes:
      # Anonymous volume for Poetry cache so it doesn't conflict with local mount
      - api_poetry_cache:/opt/poetry/cache
    entrypoint: ["poetry", "run", "uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "${API_PORT:-8000}"]
    depends_on:
      - db
  db:
    image: postgres:17
    container_name: ${APP_NAME}_db
    restart: always
    # set shared memory limit when using docker compose
    shm_size: 128mb
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT_DEV:-5432}:${POSTGRES_PORT:-5432}"
    volumes:
      - db_postgresql_data:/var/lib/postgresql/data
    networks:
      - app_network
  db_adminer:
    image: adminer
    container_name: ${APP_NAME}_db_adminer
    restart: always
    ports:
      - "${DB_ADMINER_PORT_DEV:-8080}:${DB_ADMINER_PORT:-8080}"
    networks:
      - app_network
  web_vue3:
    container_name: ${APP_NAME}_web_vue3
    image: ${APP_NAME}_web_vue3:${APP_API_VERSION}
    build:
      context: ./web/vue3
      dockerfile: Dockerfile.${APP_ENVIRONMENT}
    environment:
      APP_ENVIRONMENT: ${APP_ENVIRONMENT}
    networks:
      - app_network
  nginx:
    container_name: ${APP_NAME}_nginx
    image: ${APP_NAME}_nginx:${APP_API_VERSION}
    build:
      context: ./nginx
      dockerfile: Dockerfile
    environment:
      APP_ENVIRONMENT: ${APP_ENVIRONMENT}
      NGINX_API_HOST: api
      API_PORT: ${API_PORT}
      NGINX_API_PORT: ${NGINX_API_PORT}
      NGINX_API_SERVER_NAME: ${NGINX_API_SERVER_NAME}
      NGINX_WEB_PORT: ${NGINX_WEB_PORT}
      NGINX_WEB_SERVER_NAME: ${NGINX_WEB_SERVER_NAME}
    networks:
      - app_network
    depends_on:
      - api


# Definition network
networks:
  app_network:
    driver: bridge


# Definition of named volumes
volumes:
  api_poetry_cache:
  db_postgresql_data:
